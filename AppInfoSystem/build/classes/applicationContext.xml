<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd">

<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	<property name="url" value="jdbc:mysql://127.0.0.1:3306/smbms?useUnicode=true&amp;characterEncoding=utf-8"/>
	<property name="username" value="root"/>
	<property name="password" value="nx22"/>
</bean> -->
<!-- 引入database.properties -->
<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="location">
		<value>classpath:database.properties</value>
	</property>
</bean>
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	<property name="driverClassName" value="${driver}"></property>
	<property name="url" value="${url}"></property>
	<property name="username" value="${username}"></property>
	<property name="password" value="${password}"></property>
</bean>

<!-- 配置SQLSessionFactoryBean -->
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<!-- 引用数据源组件 -->
	<property name="dataSource" ref="dataSource"/>
	<!-- 引用mybatis配置文件中的配置 -->
	<property name="configLocation" value="classpath:mybatis-config.xml"/>
	<!-- 配置sql映射文件信息 -->
	<property name="mapperLocations">
		<list>
			<value>classpath:cn/smbms/dao/**/**/*.xml</value>
		</list>
	</property>
</bean>
<!-- 配置SqlSessionTemplate实例 -->
<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
</bean>
<!-- 配置Dao 给我这个sqlsession注入赋值,值等于上面这个类  依赖注入-->
<!-- <bean id="userMapper" class="cn.smbms.dao.user.UserMapperImpl">
    <property name="sqlSession" ref="sqlSessionTemplate" />
</bean> -->

<import resource="applicationContext-dao.xml"/>

<!-- 配置业务bean并注入dao实例 -->
<!-- <bean id="userService" class="cn.smbms.service.user.UserServiceImpl">
      <property name="userMapper" ref="userMapper" />
</bean> -->
<import resource="applicationContext-service.xml"/>

<!-- 配置事务管理类,并添加对注解配置的事务的支持  @Transactional 通过驱动加载事务-->
<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"></property>
</bean>
<tx:annotation-driven transaction-manager="txManager"/>
<!-- 或者bean的id=transactionManager 下面的tx不用定义  名字相同自动装配 -->

<!-- 扫描注解 -->
<context:component-scan base-package="cn.smbms"></context:component-scan>
<aop:aspectj-autoproxy />






















</beans>